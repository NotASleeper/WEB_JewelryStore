create database JeweryStore;

create table SUPPLIER(
ID_SUPPLIER VARCHAR(20),
NAME_SUPPLIER NVARCHAR(100),
ADDRESS NVARCHAR(200),
PHONE_NUMBER CHAR(10),
EMAIL VARCHAR(50),
STATUS BOOL,
PRIMARY KEY (ID_SUPPLIER)
);

create table COUPON(
ID_COUPON VARCHAR(20),
COUPON_CODE VARCHAR(100),
DISCOUNT MEDIUMINT,
IS_USED BOOL,
STATUS BOOL,
PRIMARY KEY (ID_COUPON) 
);

create table PRODUCT_CATEGORY(
ID_CATEGORY VARCHAR(20),
NAME_CATEGORY NVARCHAR(100),
STATUS BOOL,
PRIMARY KEY (ID_CATEGORY)
);

create table PRODUCT(
ID_PRODUCT VARCHAR(20),
ID_CATEGORY VARCHAR(20),
NAME_PRODUCT NVARCHAR(100),
GOLD_AGE FLOAT,
SIZE SMALLINT,
WEIGHT FLOAT,
PRICE BIGINT,
WARRANTY_PERIOD TINYINT,
STATUS BOOL,
PRIMARY KEY (ID_PRODUCT),
FOREIGN KEY (ID_CATEGORY) REFERENCES PRODUCT_CATEGORY(ID_CATEGORY)
);

create table GEMSTONE(
ID_PRODUCT VARCHAR(20),
NAME_GEMSTONE NVARCHAR(100),
SIZE SMALLINT,
WEIGHT FLOAT,
COLOR NVARCHAR(50),
PURITY FLOAT,
CERTIFICATE VARCHAR(200),
STATUS BOOL,
PRIMARY KEY (ID_PRODUCT),
FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT)
);


create table INVENTORY(
ID_PRODUCT VARCHAR(20),
QUANTITY SMALLINT,
PRIMARY KEY (ID_PRODUCT),
FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT)
);

create table CUSTOMER(
ID_CUSTOMER VARCHAR(20),
NAME_CUSTOMER NVARCHAR(100),
ADDRESS NVARCHAR(200),
PHONE_NUMBER CHAR(10),
EMAIL VARCHAR(50),
BIRTHDAY DATE,
LOYALTY_POINT SMALLINT, /*Một triệu đồng sẽ tích được 1 điểm LP*/
ACCUMULATED_POINT SMALLINT, /*Một triệu đồng sẽ tích được 1 điểm AP*/
STATUS BOOL,
PRIMARY KEY (ID_CUSTOMER)
);

create table POSITION_STAFF(
ID_POSITION VARCHAR(20),
NAME_POSITION NVARCHAR(100),
STATUS BOOL,
PRIMARY KEY (ID_POSITION)
);

create table STAFF(
ID_STAFF VARCHAR(20),
NAME_STAFF NVARCHAR(100),
ADDRESS NVARCHAR(200),
PHONE_NUMBER CHAR(10),
EMAIL VARCHAR(50),
BIRTHDAY DATE,
ID_POSITION VARCHAR(20),
STATUS BOOL,
PRIMARY KEY (ID_STAFF),
FOREIGN KEY (ID_POSITION) REFERENCES POSITION_STAFF(ID_POSITION)
);

create table ACCOUNT(
ID_ACCOUNT VARCHAR(20),
USERNAME VARCHAR(100),
PASSWORD VARCHAR(200),
ID_STAFF VARCHAR(20),
STATUS BOOL,
PRIMARY KEY (ID_ACCOUNT),
FOREIGN KEY (ID_STAFF) REFERENCES STAFF(ID_STAFF)
);

create table IMPORT_FORM(
ID_LOT VARCHAR(20),
ID_SUPPLIER VARCHAR(20),
DATE_CREATED DATETIME,
ID_STAFF VARCHAR(20),
TOTAL_PRICE BIGINT,
STATUS BOOL,
PRIMARY KEY (ID_LOT),
FOREIGN KEY (ID_SUPPLIER) REFERENCES SUPPLIER(ID_SUPPLIER),
FOREIGN KEY (ID_STAFF) REFERENCES STAFF(ID_STAFF) 
);

create table IMPORT_DETAIL(
ID_LOT VARCHAR(20),
ID_PRODUCT VARCHAR(20),
QUANTITY TINYINT,
PRICE BIGINT, /*Trường dữ liệu này là giá nhập, sẽ khác giá bán*/
TOTAL BIGINT,
STATUS BOOL,
PRIMARY KEY (ID_LOT,ID_PRODUCT),
FOREIGN KEY (ID_LOT) REFERENCES IMPORT_FORM(ID_LOT),
FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT)
);

create table ORDER_FORM(
ID_ORDER VARCHAR(20),
ID_CUSTOMER VARCHAR(20),
ID_STAFF VARCHAR(20),
IS_USED_POINT BOOL,
ID_COUPON VARCHAR(20),
TOTAL_PRICE BIGINT,
DATE_CREATED DATETIME,
DATE_PAYMENT DATETIME,
STATUS BOOL,
PRIMARY KEY (ID_ORDER),
FOREIGN KEY (ID_CUSTOMER) REFERENCES CUSTOMER(ID_CUSTOMER),
FOREIGN KEY (ID_STAFF) REFERENCES STAFF(ID_STAFF),
FOREIGN KEY (ID_COUPON) REFERENCES COUPON(ID_COUPON)
);

create table ORDER_DETAIL(
ID_ORDER VARCHAR(20),
ID_PRODUCT VARCHAR(20),
QUANTITY TINYINT,
REQUEST NVARCHAR(200),
SURCHARGE BIGINT,
TOTAL BIGINT,
STATUS BOOL,
PRIMARY KEY (ID_ORDER,ID_PRODUCT),
FOREIGN KEY (ID_ORDER) REFERENCES ORDER_FORM(ID_ORDER),
FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT)
);

create table LIQUIDATION_FORM(
ID_LIQ VARCHAR(20),
ID_STAFF_CREATED VARCHAR(20),
DATE_CREATED DATETIME,
ID_STAFF_ACCEPTED VARCHAR(20),
DATE_ACCEPTED DATETIME,
TOTAL_PRICE BIGINT,
PRODUCT_STATUS BOOL,
STATUS BOOL,
PRIMARY KEY (ID_LIQ),
FOREIGN KEY (ID_STAFF_CREATED) REFERENCES STAFF(ID_STAFF),
FOREIGN KEY (ID_STAFF_ACCEPTED) REFERENCES STAFF(ID_STAFF)
);

create table LIQUIDATION_DETAIL(
ID_LIQ VARCHAR(20),
ID_PRODUCT VARCHAR(20),
QUANTITY SMALLINT,
PRICE_DOWN BIGINT, /*Trường này dùng để lưu giá trị thanh lý chứ kp giá trị lưu trong bản sp*/
TOTAL BIGINT,
STATUS BOOL,
PRIMARY KEY (ID_LIQ, ID_PRODUCT),
FOREIGN KEY (ID_LIQ) REFERENCES LIQUIDATION_FORM(ID_LIQ),
FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT)
);

create table SERVICE_ACTIVITY(
ID_ACTIVITY VARCHAR(20),
ID_CATEGORY VARCHAR(20),
NAME_ACTIVITY NVARCHAR(100),
PRICE MEDIUMINT,
STATUS BOOL,
PRIMARY KEY (ID_ACTIVITY),
FOREIGN KEY (ID_CATEGORY) REFERENCES PRODUCT_CATEGORY(ID_CATEGORY)
);

create table WARRANTY_MAINTAINANCE(
ID_WA_MA VARCHAR(20),
ID_STAFF VARCHAR(20),
DATE_CREATED DATETIME,
TYPE BOOL,
ID_CUSTOMER VARCHAR(20),
ID_ORDER VARCHAR(20),
ID_PRODUCT VARCHAR(20),
ID_CATEGORY VARCHAR(20),
NAME_PRODUCT NVARCHAR(100),
ID_ACTIVITY VARCHAR(20),
IMAGE VARCHAR(200),
SURCHARGE MEDIUMINT,
TOTAL_PRICE BIGINT,
STATUS BOOL,
PRIMARY KEY (ID_WA_MA),
FOREIGN KEY (ID_STAFF) REFERENCES STAFF(ID_STAFF),
FOREIGN KEY (ID_CUSTOMER) REFERENCES CUSTOMER(ID_CUSTOMER),
FOREIGN KEY (ID_ORDER) REFERENCES ORDER_FORM(ID_ORDER),
FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT),
FOREIGN KEY (ID_CATEGORY) REFERENCES PRODUCT_CATEGORY(ID_CATEGORY),
FOREIGN KEY (ID_ACTIVITY) REFERENCES SERVICE_ACTIVITY(ID_ACTIVITY)
);

create table VALUATION_FORM(
ID_VALUATION VARCHAR(20),
ID_STAFF_CREATED VARCHAR(20),
DATE_CREATED DATETIME,
ID_CUSTOMER VARCHAR(20),
ID_PRODUCT VARCHAR(20),
ID_CATEGORY VARCHAR(20),
NAME_PRODUCT NVARCHAR(100),
NOTE NVARCHAR(200),
TOTAL_PRICE BIGINT,
ID_STAFF_VALUATED VARCHAR(20),
DATE_VALUATED DATETIME,
PRODUCT_STATUS BOOL,
STATUS BOOL,
PRIMARY KEY (ID_VALUATION),
FOREIGN KEY (ID_STAFF_CREATED) REFERENCES STAFF(ID_STAFF),
FOREIGN KEY (ID_CUSTOMER) REFERENCES CUSTOMER(ID_CUSTOMER),
FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT),
FOREIGN KEY (ID_CATEGORY) REFERENCES PRODUCT_CATEGORY(ID_CATEGORY),
FOREIGN KEY (ID_STAFF_VALUATED) REFERENCES STAFF(ID_STAFF)
);

create table REFUND_FORM(
ID_REFUND VARCHAR(20),
ID_STAFF VARCHAR(20),
DATE_CREATED DATETIME,
ID_CUSTOMER VARCHAR(20),
ID_ORDER VARCHAR(20),
ID_PRODUCT VARCHAR(20),
NOTE NVARCHAR(200),
STATUS BOOL,
PRIMARY KEY (ID_REFUND),
FOREIGN KEY (ID_STAFF) REFERENCES STAFF(ID_STAFF),
FOREIGN KEY (ID_CUSTOMER) REFERENCES CUSTOMER(ID_CUSTOMER),
FOREIGN KEY (ID_ORDER) REFERENCES ORDER_FORM(ID_ORDER),
FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT)
);

